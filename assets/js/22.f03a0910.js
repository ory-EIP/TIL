(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{295:function(s,e,a){"use strict";a.r(e);var o=a(13),t=Object(o.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"docker-compose-command"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-command"}},[s._v("#")]),s._v(" Docker Compose Command")]),s._v(" "),e("p",[s._v("Docker Compose는 여러 개의 컨테이너(container)로 구성된 애플리케이션을 관리하기 위한 간단한 오케스트레이션도구(Orchestration) 입니다.")]),s._v(" "),e("h2",{attrs:{id:"f-옵션"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f-옵션"}},[s._v("#")]),s._v(" -f 옵션")]),s._v(" "),e("p",[s._v("Docker Compose는 기본적으로 커맨드가 실행하는 디렉토리에 있는 "),e("code",[s._v("docker-compose.yml")]),s._v(" 또는 "),e("code",[s._v("docker-compose.yaml")]),s._v("를 설정 파일로 사용한다.")]),s._v(" "),e("p",[s._v("다른 이름이나 경로의 파일을 Docker Compose 설정 파일로 사용하고 싶다면 -f 옵션으로 명시를 해준다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" f docker-compose-local.yml up\n")])])]),e("p",[e("code",[s._v("-f")]),s._v(" 옵션은 여러 개의 설정 파일을 사용할 때도 사용할 수 있다. 이 때는 나중에 나오는 설정이 앞에 나오는 설정보다 우선하게 된다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" docker-compose.yml "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" docker-compose-local.yml up\n")])])]),e("h2",{attrs:{id:"up-옵션"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#up-옵션"}},[s._v("#")]),s._v(" up 옵션")]),s._v(" "),e("p",[e("code",[s._v("docker-compose up")]),s._v(" 커맨드는 아마도 Docker Composedptj rkwkd wkwn tkdydehlsms zjaosemdlek.")]),s._v(" "),e("p",[s._v("Docker Compose에 정의되어 있는 모든 서비스 컨테이너를 한번에 생성하고 실행하기 위해서 사용한다.")]),s._v(" "),e("p",[s._v("보통 "),e("code",[s._v("-d")]),s._v(" 옵션을 사용하여 백그라운드에서 컨테이너를 띄우는 경우가 많다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v("\n")])])]),e("p",[e("code",[s._v("-d")]),s._v(" 옵션을 사용하지 않으면 현재 터미널이 컨테이너의 로그가 출력되고 "),e("code",[s._v("Ctrl + C")]),s._v("를 눌러서 탈출하는 순간 컨테이너가 모두 정지되기 때문이다.")]),s._v(" "),e("h2",{attrs:{id:"down"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#down"}},[s._v("#")]),s._v(" down")]),s._v(" "),e("p",[e("code",[s._v("docker-compose down")]),s._v("은 "),e("code",[s._v("docker-compose up")]),s._v("와 반대의 동작을 한다.")]),s._v(" "),e("p",[s._v("Docker Compose에 정의되어 있는 모든 서비스 컨테이너를 한 번에 정지시키고 삭제한다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" down\n")])])]),e("h2",{attrs:{id:"start"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[s._v("#")]),s._v(" start")]),s._v(" "),e("p",[e("code",[s._v("docker-compose start")]),s._v("는 내려가 있는 특정 서비스 컨ㅌ에ㅣ너를 올리기 위해서 사용한다.")]),s._v(" "),e("p",[s._v("대부분의 경우에는 "),e("code",[s._v("docker-compose up")]),s._v(" 를 사용해도 내려간 서비스를 알아서 올려주므로 무방하다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" start web\n")])])]),e("h2",{attrs:{id:"stop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[s._v("#")]),s._v(" stop")]),s._v(" "),e("p",[e("code",[s._v("docker-compose stop")]),s._v("은 "),e("code",[s._v("docker-compose")]),s._v("와 반대를 의미한다.")]),s._v(" "),e("p",[s._v("돌아가고 있는 특정 서비스 컨테이너를 정지시키기 위해서 사용한다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" stop web\n")])])]),e("h2",{attrs:{id:"ps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ps"}},[s._v("#")]),s._v(" ps")]),s._v(" "),e("p",[e("code",[s._v("docker-compose ps")]),s._v("는 Docker compose에 정의되어 있는 모든 서비스 컨테이너 목록을 조회할 때 사용한다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),e("h2",{attrs:{id:"logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logs"}},[s._v("#")]),s._v(" logs")]),s._v(" "),e("p",[e("code",[s._v("docker-compose logs")]),s._v("는 서비스 컨테이너의 로그를 확인하고 싶을 때 사용하며, 보통 -f 옵션을 붙여서 실시간 로그를 확인한다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker0-compose logs "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("f web\n")])])]),e("h2",{attrs:{id:"exec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[s._v("#")]),s._v(" exec")]),s._v(" "),e("p",[e("code",[s._v("docker-compose exec")]),s._v("는 실행 중인 서비스 컨테이너를 대상으로 어떤 명령어를 날릴 때 사용한다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" db psql postgres postgres\n")])])]),e("h2",{attrs:{id:"run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[s._v("#")]),s._v(" run")]),s._v(" "),e("p",[e("code",[s._v("docker-compose run")]),s._v("은 서비스 컨테이너의 특정 멸영어를 일회성으로 실행할 때 사용한다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" run web "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v("\n")])])]),e("h2",{attrs:{id:"config"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[s._v("#")]),s._v(" config")]),s._v(" "),e("p",[e("code",[s._v("docker-compose config")]),s._v("는 Docker Compose 설정을 확인할 때 사용한다.")]),s._v(" "),e("p",[e("code",[s._v("-f")]),s._v(" 옵션으로 여러 개의 설정 파일을 사용할 때, 최종적으로 어떻게 설정이 적용되는지 확인해볼 때 유용하다.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docker-copmose config\n\nversion: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x.x'")]),s._v("\nservoces:\n  db:\n  web:\n\n")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);